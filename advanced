#!/bin/sh
#########
# advanced
#
# Author: Ryan Flett - s3633011
# Date written: 29-9-2016
# Date last modified: 3-10-2016
#
# This script retrieves system information or performs a backup.
#
# The script accepts switches which once analysed the the case switch will run the corresponding
# function to display the information. The backup switch takes two arguments, a wildcard and
# destination folder. The findAndCopy function will copy all files matching the wilcard to the
# destination, and will create the destination if it does not exist.
#
#########

# DISPLAY THE MAX NUMBER OF CPUS AVAILABLE
cpus() {
	grep -c '^processor' /proc/cpuinfo
}

# DISPLAY THE MAX NUMBER OF OPEN FILES ALLOWED
openFiles() {
	cat /proc/sys/fs/file-max
}

# FIND FILES BY WILDCARD AND COPY THEM TO DESTINATION
findAndCopy() {
	wildcard=$1
	dest=$2

	# COPIES FILES THAT MATCH WILDCARD IN CURRENT DIR AND COPIES TO DEST
	copy() {
		find . -name "$wildcard" -print0 | xargs -0 cp -f -t "$dest" 2>/dev/null
	}
	
	# CREATES $DEST DIRECTORY IF IT DOES NOT EXIST
	if [ -d "$dest" ]; then
		copy	
	else
		mkdir "$dest" 2>/dev/null
		copy
		echo "Successfully copied files matching $wildcard to $dest."
	fi
}

# LOOPS OPTIONS AND EXECUTES CORRESPONDING FUNCTION FOR EACH FLAG
while getopts "pob" opt; do
	case $opt in
		p) cpus ;;
		o) openFiles ;;
		b) 
			# SET $1 TO FIRST MASS ARGUMENT ETC.
			shift $((OPTIND-1))

			# ONLY FIND AND COPY IF BOTH MASS ARGUMENTS ARE PROVIDED
			if [ ! -z "$1" ] || [ ! -z "$2" ]; then
				findAndCopy "$1" "$2"
			else
				echo "Missing 1 or more mass arguments"
				echo "Usage: $0 [-p | -o | -b wildcard destination]"
			fi
			;;
		*) 
			echo "Usage: $0 [-p | -o | -b wildcard destination]"
			exit 0
	esac		
done

